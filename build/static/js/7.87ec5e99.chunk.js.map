{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UserList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UserList","items","length","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","responseData","users","console","log","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,gMCSEC,G,kBAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,eCcpCE,EAlBE,SAAAV,GACf,OACE,wBAAIC,UAAU,aACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACd,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACN,yBAAKX,UAAU,oBACb,kBAAC,EAAD,CAAQK,MAAK,UAAKO,8CAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAEjF,yBAAKb,UAAU,mBACb,4BAAKD,EAAMc,MACX,4BAAKd,EAAMe,WAAX,IAA6C,IAArBf,EAAMe,WAAmB,QAAU,eCaxDC,EAxBE,SAAAhB,GACf,OAA2B,IAAvBA,EAAMiB,MAAMC,OACP,yBAAKjB,UAAU,UACpB,kBAACF,EAAA,EAAD,KACA,gDAMJ,wBAAIE,UAAU,cACXD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACrB,kBAAC,EAAD,CACEC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,c,QCoBfK,UApCD,WAEZ,MAAoDC,cAA7CC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,WAEtC,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAmBA,OAhBAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAGYN,EAAYd,4CAHxB,OAGTqB,EAHS,OAKfH,EAAeG,EAAaC,OALb,gDAQfC,QAAQC,IAAR,MARe,yDAAH,qDAWhBC,KAEC,CAACX,IAGF,kBAAC,IAAMY,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYd,MAAOA,EAAOe,QAASb,IAClCH,GACC,yBAAKxB,UAAU,UACb,kBAACyC,EAAA,EAAD,QAGFjB,GAAaK,GAAe,kBAAC,EAAD,CAAUb,MAAOa","file":"static/js/7.87ec5e99.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport './UserItem.css'\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\nimport { Link } from 'react-router-dom';\nimport Card from \"../../shared/components/UIElements/Card\";\n\nconst UserItem = props => {\n  return (\n    <li className='user-item'>\n      <Card className='user-item__content'>\n        <Link to={`/${props.id}/places`}>\n          <div className='user-item__image'>\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\n          </div>\n          <div className='user-item__info'>\n            <h2>{props.name}</h2>\n            <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}</h3>\n          </div>\n        </Link>\n      </Card>\n    </li>\n  );\n}\n\nexport default UserItem","import React from \"react\";\nimport './UserList.css'\nimport UserItem from \"./UserItem\";\nimport Card from \"../../shared/components/UIElements/Card\";\n\nconst UserList = props => {\n  if (props.items.length === 0) {\n    return <div className='center'>\n      <Card>\n      <h2>No users found</h2>\n      </Card>\n    </div>\n  }\n\n  return (\n  <ul className='users-list'>\n    {props.items.map(user => (\n    <UserItem \n      key={user.id} \n      id={user.id} \n      image={user.image} \n      name={user.name} \n      placeCount={user.places.length} \n      />\n    ))}\n  </ul>\n  );\n}\n\nexport default UserList","import React, { useEffect, useState } from 'react';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport UserList from '../components/UserList';\nimport { useHttpClient } from '../../shared/components/hooks/http-hook';\n\nconst Users = () => {\n  // Returns an object we can destructure\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  // GET Req to get users whenever this page loads\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        // By default sends a get request without a body nor headers\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\n\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        // Don't need to do anything, HttpReq hook manages error handling\n        console.log(err)\n      }\n    };\n    fetchUsers();\n    // Needs to be a dependancy to handle a lot of our logic\n  }, [sendRequest]);  \n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\n    </React.Fragment>\n  );\n};\n\nexport default Users;\n"],"sourceRoot":""}