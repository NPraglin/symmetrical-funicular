{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","shared/components/hooks/auth-hook.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","Auth","UserPlaces","UpdatePlace","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","logoutTimer","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.a1971a1c.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AuthContext = createContext({\n  isLoggedIn: false, \n  userId: null,\n  token: null,\n  login: () => {}, \n  logout: () => {} \n});\n\nexport default AuthContext;","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\nimport './MainHeader.css'\n\nconst MainHeader = props => {\n  return (\n    <header className='main-header'>\n      {props.children}\n    </header>\n  );\n};\n\nexport default MainHeader;","import React, { useContext } from \"react\";\nimport './NavLinks.css';\nimport { NavLink } from 'react-router-dom';\nimport AuthContext from \"../../context/auth-context\";\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return <ul className='nav-links'>\n      <li>\n        <NavLink to=\"/\" exact>All Users</NavLink>\n      </li>\n      {auth.isLoggedIn && (<li>\n        <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\n      </li>)}\n      {auth.isLoggedIn && (<li>\n        <NavLink to=\"/places/new\">Add Place</NavLink>\n      </li>)}\n      {!auth.isLoggedIn && (<li>\n        <NavLink to=\"/auth\">Authenticate</NavLink>\n      </li>)}\n      {auth.isLoggedIn && \n      <li>\n        <button onClick={auth.logout}>Logout</button>\n      </li>}\n    </ul>;\n};\n\nexport default NavLinks;","import React from \"react\";\nimport './SideDrawer.css';\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from 'react-transition-group';\n\nconst SideDrawer = props => {\n  const content = (\n  <CSSTransition \n  in={props.show} \n  timeout={200} \n  classNames='slide-in-left' \n  mountOnEnter \n  unmountOnExit\n  >\n  <aside className='side-drawer' onClick={props.onClick}>{props.children}</aside>\n  </CSSTransition>\n  );\n  \n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n\n};\n\nexport default SideDrawer;","import React, { useState } from \"react\";\nimport './MainNavigation.css'\nimport MainHeader from \"./MainHeader\";\nimport { Link } from \"react-router-dom\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      \n    <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n      <nav className='main-navigation__drawer-nav'>\n        <NavLinks />\n      </nav>\n    </SideDrawer>\n\n    <MainHeader>\n      <button className='main-navigation__menu-btn' onClick={openDrawerHandler}>\n        <span />\n        <span />\n        <span />\n      </button>\n      <h1 className='main-navigation__title'>\n        <Link to=\"/\">WorkByte</Link>\n      </h1>\n      <nav className='main-navigation__header-nav'>\n        <NavLinks />\n      </nav>\n    </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport AuthContext from './shared/context/auth-context';\nimport { useAuth } from './shared/components/hooks/auth-hook';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\n\n\n\n\nconst App = () => {\n\n  // Object destructuring\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/Auth'>\n          <Auth />\n        </Route>\n        <Redirect to='/Auth' />\n      </Switch>\n    );\n  }\n  \n  return (\n    <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}>\n      <Router>\n        <MainNavigation />\n          <main>\n              <Suspense \n                fallback={\n                  <div className=\"center\">\n                    <LoadingSpinner />\n                  </div>\n                }>\n                  {routes}\n              </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  // Token state for authentication\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  // Set userId to the ID passed\n  // Pass in expiration date\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); // generates date object + 1hr\n    setTokenExpirationDate(tokenExpirationDate); // Set state to variable above\n    localStorage.setItem(\n      'userData', \n      JSON.stringify({\n        userId: uid, \n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      }));\n  }, []);\n\n  // Clear the userId store and token upon logout\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData'); // remove token when logged out\n  }, []);\n\n  // Logout user after timeout of token\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date(); // gets time in ms and subtracts\n      setTimeout(logout, remainingTime) // timeout for the proper logout after expiration\n    } else {\n      clearTimeout(logoutTimer) // if no token aka manually logged out\n    }\n  }, [token, logout, tokenExpirationDate])\n\n  // Check for token in localStorage to auto login.. useEffect runs after render cycle!!!\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData')); // parse token data\n    if (\n      storedData && \n      storedData.token && \n      new Date(storedData.expiration) > new Date() // If expiration is greater, than we're good to go\n      ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration)) // login via token if the expiration date is still in future\n    };\n  }, [login]);\n\n  return { token, login, logout, userId };\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}