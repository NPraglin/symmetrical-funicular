{"version":3,"sources":["shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/components/hooks/form-hook.js","shared/components/FormElements/imageUpload.js","user/pages/Auth.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","valid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","text","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","formisValid","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","Button","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","a","preventDefault","console","log","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.17b044e7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from \"react\";\nimport './Input.css';\nimport { validate } from '../../util/validators';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, \n    {\n      value: props.value || '', \n      isValid: props.valid || false, \n      isTouched: false\n    });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE', \n      val: event.target.value, \n      validators: props.validators\n    })\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    })\n  };\n  \n  const element = \n    props.element === 'input' ? (\n      <input \n        id={props.id} \n        type={props.type} \n        placeholder={props.placeholder} \n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea \n        id={props.id}\n        type={props.text}\n        rows={props.rows || 3} \n        value={inputState.value}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n      />\n    );\n\n  return (\n    <div \n      className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched &&<p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE', \n      value: value, \n      isValid: isValid, \n      inputId: id\n    })\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formisValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}","import React, { useRef, useState, useEffect } from \"react\";\nimport './imageUpload.css';\nimport Button from \"./Button\";\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    } else {\n    const fileReader = new FileReader(); // Part of browser\n    // Must load before calling\n    fileReader.onload = () => {\n      // Tricky API\n      setPreviewUrl(fileReader.result);\n    };\n    // Extracts URL\n    fileReader.readAsDataURL(file);\n    }\n  }, [file]);\n  // opens the image picker\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n  // shows picked img\n  const pickedHandler = event => {\n    // should never be undefined\n    let pickedFile;\n    // temporary shrotcut to sending validity\n    let fileIsValid = isValid;\n    // If there is a single file picked, setFile state to picked file, and valid to true, then set props as id and file\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid)\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input \n        id={`${props.id} 'file-selector`} \n        ref={filePickerRef}\n        style={{ display: 'none' }} \n        type=\"file\" \n        accept=\".jpg, .png, .jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;","import React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport './Auth.css';\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE} from \"../../shared/util/validators\"\nimport { useForm } from \"../../shared/components/hooks/form-hook\";\nimport AuthContext from \"../../shared/context/auth-context\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/components/hooks/http-hook\";\nimport ImageUpload from \"../../shared/components/FormElements/imageUpload\";\n\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n\n  // Some states to manage\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  // Input values for form state\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  // Switches from login to sign up\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n      {\n        ...formState.inputs,\n        name: undefined,\n        image: undefined\n      }, \n      formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        },\n        image: {\n          value: null,\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  // Handles our signing up and logging in\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    // debug log to see if picked file is part of inputs\n    console.log(formState.inputs)\n    // Logging in?\n    if (isLoginMode) {\n        // Loading state true so we can render some loading status for users on the front end\n        // Point to backend signup sending POST req and body\n        try {\n          const responseData = await sendRequest(\n            process.env.REACT_APP_BACKEND_URL + '/users/login', \n            'POST', \n            JSON.stringify({\n              email: formState.inputs.email.value,\n              password: formState.inputs.password.value\n            }), \n            {'Content-Type': 'application/json'}\n          );\n        auth.login(responseData.userId, responseData.token);\n        } catch (err) {\n          // No need to handle error becuase custom hook handles that for us, this can be empty or just console.log\n          console.log(err)\n        }\n  \n    // Signing up?\n    } else {\n    try {\n      // using formData we can refractor the auth rather than manually sending a POST body\n      const formData = new FormData();\n      formData.append('email', formState.inputs.email.value);\n      formData.append('name', formState.inputs.name.value);\n      formData.append('password', formState.inputs.password.value);\n      formData.append('image', formState.inputs.image.value);\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/users/signup', \n        'POST', \n        formData);\n    \n      auth.login(responseData.userId, responseData.token);\n    } catch (err) {\n      console.log(err);\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className='authentication'>\n        {isLoading && <LoadingSpinner asOverlay={true}/>}\n        <h2>Login Required</h2>\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input \n              element='input' \n              id='name' \n              type='text' \n              label='Your Name' \n              validators={[VALIDATOR_REQUIRE()]} \n              errorText=\"Please enter a name\" \n              onInput={inputHandler}\n            />)}\n            {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\" />}\n          <Input \n            element='input' \n            id='email' \n            type='email' \n            label='E-Mail' \n            validators={[VALIDATOR_EMAIL()]}\n            errorText='Please enter a valid email address.'\n            onInput={inputHandler}  \n          />\n          <Input \n            element='input' \n            id='password' \n            type='password' \n            label='Password' \n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText='Please enter a valid password of at least 5 characters'\n            onInput={inputHandler}  \n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>{isLoginMode ? 'Login' : 'SIGNUP'}</Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}</Button>\n      </Card>\n    </React.Fragment>\n  )\n}\n\nexport default Auth;"],"sourceRoot":""}