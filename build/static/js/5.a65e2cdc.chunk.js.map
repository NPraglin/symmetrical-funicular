{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/components/hooks/form-hook.js","shared/components/FormElements/imageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","valid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","text","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","formisValid","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","console","log","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/5.a65e2cdc.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from \"react\";\nimport './Input.css';\nimport { validate } from '../../util/validators';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, \n    {\n      value: props.value || '', \n      isValid: props.valid || false, \n      isTouched: false\n    });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE', \n      val: event.target.value, \n      validators: props.validators\n    })\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    })\n  };\n  \n  const element = \n    props.element === 'input' ? (\n      <input \n        id={props.id} \n        type={props.type} \n        placeholder={props.placeholder} \n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea \n        id={props.id}\n        type={props.text}\n        rows={props.rows || 3} \n        value={inputState.value}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n      />\n    );\n\n  return (\n    <div \n      className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched &&<p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE', \n      value: value, \n      isValid: isValid, \n      inputId: id\n    })\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formisValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n}","import React, { useRef, useState, useEffect } from \"react\";\nimport './imageUpload.css';\nimport Button from \"./Button\";\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    } else {\n    const fileReader = new FileReader(); // Part of browser\n    // Must load before calling\n    fileReader.onload = () => {\n      // Tricky API\n      setPreviewUrl(fileReader.result);\n    };\n    // Extracts URL\n    fileReader.readAsDataURL(file);\n    }\n  }, [file]);\n  // opens the image picker\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n  // shows picked img\n  const pickedHandler = event => {\n    // should never be undefined\n    let pickedFile;\n    // temporary shrotcut to sending validity\n    let fileIsValid = isValid;\n    // If there is a single file picked, setFile state to picked file, and valid to true, then set props as id and file\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid)\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input \n        id={`${props.id} 'file-selector`} \n        ref={filePickerRef}\n        style={{ display: 'none' }} \n        type=\"file\" \n        accept=\".jpg, .png, .jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;","import React, { useContext } from 'react'; \nimport './PlaceForm.css';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport { useForm } from '../../shared/components/hooks/form-hook';\nimport { useHttpClient } from '../../shared/components/hooks/http-hook';\nimport AuthContext from '../../shared/context/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport ImageUpload from '../../shared/components/FormElements/imageUpload';\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    },\n    image: {\n      value: null,\n      isValid: false\n    }\n  }, false);\n\n  const history = useHistory();\n\n  // Submit our new place!\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n    // form data state\n    const formData = new FormData();\n    formData.append('title', formState.inputs.title.value);\n    formData.append('description', formState.inputs.description.value);\n    formData.append('address', formState.inputs.address.value);\n    formData.append('image', formState.inputs.image.value);\n    // sendRequest hook to send data\n    await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData, {\n      Authorization: 'Bearer ' + auth.token\n    });\n      history.push('/');\n    } catch (err) {\n      // Redirect user to diff page\n      console.log(err)\n    }\n  };\n\n  return (\n  <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n      <form className='place-form' onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input \n          id='title'\n          element='input' \n          type='text' \n          label='Title' \n          validators={[VALIDATOR_REQUIRE()]} \n          errorText='Please enter a valid title.' \n          onInput={inputHandler}\n        />\n        <Input \n          id='description'\n          element='textarea' \n          label='Description' \n          validators={[VALIDATOR_MINLENGTH(5)]} \n          errorText='Please enter a valid description, a least 5 characters.' \n          onInput={inputHandler}\n        />\n        <Input \n          id='address'\n          element='input'  \n          label='Address' \n          validators={[VALIDATOR_REQUIRE()]} \n          errorText='Please enter a valid address.' \n          onInput={inputHandler}\n        />\n        <ImageUpload \n          id=\"image\" \n          onInput={inputHandler} \n          errorText=\"Please provide an image\" \n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>ADD PLACE</Button>\n      </form>\n  </React.Fragment>\n  );\n};\n\nexport default NewPlace;"],"sourceRoot":""}